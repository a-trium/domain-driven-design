// Code generated by go-swagger; DO NOT EDIT.

package example

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodel "github.com/a-trium/domain-driven-design/implementation-1ambda/service-gateway/pkg/generated/swagger/swagmodel"
)

// SomeActionOKCode is the HTTP code returned for type SomeActionOK
const SomeActionOKCode int = 200

/*SomeActionOK OK

swagger:response someActionOK
*/
type SomeActionOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodel.ExampleResponse `json:"body,omitempty"`
}

// NewSomeActionOK creates SomeActionOK with default headers values
func NewSomeActionOK() *SomeActionOK {

	return &SomeActionOK{}
}

// WithPayload adds the payload to the some action o k response
func (o *SomeActionOK) WithPayload(payload *swagmodel.ExampleResponse) *SomeActionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the some action o k response
func (o *SomeActionOK) SetPayload(payload *swagmodel.ExampleResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SomeActionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*SomeActionDefault error

swagger:response someActionDefault
*/
type SomeActionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *swagmodel.Error `json:"body,omitempty"`
}

// NewSomeActionDefault creates SomeActionDefault with default headers values
func NewSomeActionDefault(code int) *SomeActionDefault {
	if code <= 0 {
		code = 500
	}

	return &SomeActionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the some action default response
func (o *SomeActionDefault) WithStatusCode(code int) *SomeActionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the some action default response
func (o *SomeActionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the some action default response
func (o *SomeActionDefault) WithPayload(payload *swagmodel.Error) *SomeActionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the some action default response
func (o *SomeActionDefault) SetPayload(payload *swagmodel.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SomeActionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
